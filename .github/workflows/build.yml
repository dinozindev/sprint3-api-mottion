name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      # Passo 1: Configura JDK 17 necessário para o SonarScanner
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # Passo 2: Faz checkout do código
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Passo 3: Instala dotnet-sonarscanner
      - name: Install SonarScanner
        shell: powershell
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "$env:PATH += ';$env:USERPROFILE\.dotnet\tools'"

      # Passo 4: Build e análise do Sonar
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./Sprint3-API
        shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"dinozindev_sprint3-api-mottion" /o:"dinozindev" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
